spring:
  application:
    name: notification-api
  batch:
    created-at: ${BATCH_CREATED_AT:#{T(java.time.LocalDateTime).now().minusMinutes(5)}}  # 5분 전
    jdbc:
      initialize-schema: always
  datasource:
    hikari:
      transaction-isolation: READ_COMMITTED
      BINLOG_FORMAT: MIXED
  session:
    store-type: redis
    redis:
      namespace: "payment-system:session"  # 세션 네임스페이스 설정
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
webclient:
    clients:
      tossPayments:
        connect-timeout: 5000  # 5초
        read-timeout: 15000    # 15초
      anotherClient:
        connect-timeout: 3000
        read-timeout: 3000
cache:
  ttl: 3600  # 1시간
  eviction-strategy: allkeys-lru

monitoring:
  slow-query:
    slowQueryThreshold: 1
server:
  servlet:
    session:
      timeout: 30m  # 세션 타임아웃 설정 (예: 30분)
      cookie:
        name: PAYMENT_SESSION
        http-only: true
        secure: true  # HTTPS를 사용하는 경우
        same-site: Lax
        domain: ${COOKIE_DOMAIN:localhost}  # 로컬 환경용 설정
        path: /

---
spring:
  h2:
    console:
      enabled: true
  config:
    activate:
      on-profile: dev
  datasource:
    master:
      jdbc-url: jdbc:mysql://localhost:3306/payment
      username: root
      password:
      driver-class-name: com.mysql.cj.jdbc.Driver
    slave:
      jdbc-url: jdbc:mysql://localhost:3306/payment
      username: root
      password:
      driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect


logging:
  level:
    root: DEBUG
    com.payment.notifiationapi: DEBUG

server:
  port: 8081

---
spring:
  h2:
    console:
      enabled: false
  config:
    activate:
      on-profile: prod

  datasource:
    master:
      jdbc-url: ${DATABASE_URL}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 10
        minimum-idle: 5
    slave:
      jdbc-url: ${DATABASE_URL}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 20
        minimum-idle: 10

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

logging:
  level:
    root: INFO
    com.payment.notifiationapi: INFO

server:
  port: 8081
